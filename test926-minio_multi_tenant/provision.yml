- hosts: default
  become: yes

  vars:
    ansible_python_interpreter: /usr/bin/python3
    minio_kms_master_key: minio:7989e7d0c2ed0e6f12cd8647f4988fec27a3b48006769194d6710ea39a04f8b2  # sample
    minio_admin_key: admin
    minio_admin_secret: 775a68aad443e58908512e13e8ff8c55    # sample

  tasks:

    # Debain system

    - name: apt cache is up to date
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # MinIO

    - name: minio group is present
      group:
        name: minio
        state: present

    - name: minio user is present
      user:
        name: minio
        group: minio
        state: present

    - name: minio data directory is present
      file:
        path: /var/lib/minio
        state: directory
        owner: minio
        group: minio
        mode: 0750

    - name: minio existence is checked
      stat:
        path: /usr/sbin/minio
      register: _stat_minio

    - name: minio is installed
      get_url:
        url: https://dl.min.io/server/minio/release/linux-amd64/minio
        dest: /usr/sbin/minio
        mode: 0755
      when: not _stat_minio.stat.exists

    - name: minio config is up
      template:
        src: minio.j2
        dest: /etc/default/minio
        mode: 0600
      notify: restart minio

    - name: minio service unit is up
      copy:
        src: minio.service
        dest: /etc/systemd/system/
      notify: restart minio

    - name: minio service is activated
      service:
        name: minio
        state: started
        enabled: yes

    - meta: flush_handlers

    # Access

    - name: ansible prerequisites are installed
      apt:
        name:
          - python3-boto
          - python3-boto3
          - python3-botocore
        state: present

    - name: mybucket is present
      s3_bucket:
        name: mybucket
        state: present
        s3_url: http://{{ private_address }}:9000
        aws_access_key: "{{ minio_admin_key }}"
        aws_secret_key: "{{ minio_admin_secret }}"

    - name: somedata file is created
      copy:
        content: |
          @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
          `abcdefghijklmnopqrstuvwxyz{|}~
        dest: /tmp/somedata.txt

    - name: mybucket contains somedata as an object
      aws_s3:
        mode: put
        bucket: mybucket
        src: /tmp/somedata.txt
        object: /data/somedata.txt
        permission: [] # Set to empty as MinIO does not support ACL
        s3_url: http://{{ private_address }}:9000
        aws_access_key: "{{ minio_admin_key }}"
        aws_secret_key: "{{ minio_admin_secret }}"

    - name: somedata object is encrypted on disk
      command: file -b /var/lib/minio/mybucket/data/somedata.txt
      register: _result
      failed_when: _result.stdout == "ASCII text"
      changed_when: none

  handlers:
    - name: restart minio
      service:
        name: minio
        state: restarted
